{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "build": {
      "type": "object",
      "defaultValue": {}
    }
  },
  "variables": {
    "environment": {
      "name": "[parameters('build').name]",
      "account": "[parameters('build').account]",
      "csp": "[parameters('build').csp]",
      "ea": "[parameters('build').ea]",
      "device": "[parameters('build').device]",
      "ticket": "[parameters('build').ticket]",
      "region": "[parameters('build').region]",
      "subscriptionId": "[parameters('build').subscriptionId]",
      "tenantId": "[parameters('build').tenantId]"
    },
    "networkSecurityGroup": {
      "copy": [
        {
          "name": "subnetLoop",
          "count": "[length(parameters('build').virtualNetwork[0].subnets)]",
          "input": {
            "name": "[parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].nsg]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-05-01-preview",
            "properties": {
              "securityRules": [
                {
                  "name": "Allow_LOCAL_SUBNET_INBOUND",
                  "properties": {
                    "description": "Allows intra-subnet communication",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "[parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].addressPrefix]",
                    "destinationAddressPrefix": "[parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].addressPrefix]",
                    "access": "Allow",
                    "priority": 110,
                    "direction": "Inbound"
                  }
                },
                {
                  "name": "Allow_AZURE_LB_INBOUND",
                  "properties": {
                    "description": "Allows inbound traffic from Azure Load Balancer",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "AzureLoadBalancer",
                    "destinationAddressPrefix": "[parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].addressPrefix]",
                    "access": "Allow",
                    "priority": 111,
                    "direction": "Inbound"
                  }
                },
                {
                  "name": "Allow_RACK_BASTION_RDP_INBOUND",
                  "properties": {
                    "description": "Allows RDP inbound from local RBAST subnet",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "3389",
                    "sourceAddressPrefix": "[parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].bastion]",
                    "destinationAddressPrefix": "[parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].addressPrefix]",
                    "access": "Allow",
                    "priority": 112,
                    "direction": "Inbound"
                  }
                },
                {
                  "name": "Allow_RACK_BASTION_SSH_INBOUND",
                  "properties": {
                    "description": "Allows SSH inbound from local RBAST subnet",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "22",
                    "sourceAddressPrefix": "[parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].bastion]",
                    "destinationAddressPrefix": "[parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].addressPrefix]",
                    "access": "Allow",
                    "priority": 113,
                    "direction": "Inbound"
                  }
                },
                {
                  "name": "Allow_RACK_BASTION_WinRM_INBOUND",
                  "properties": {
                    "description": "Allows WinRM inbound from local RACK_BASTION subnet",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "5986",
                    "sourceAddressPrefix": "[parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].bastion]",
                    "destinationAddressPrefix": "[parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].addressPrefix]",
                    "access": "Allow",
                    "priority": 114,
                    "direction": "Inbound"
                  }
                },
                {
                  "name": "Allow_RACK_BASTION_SFTBROKER_INBOUND",
                  "properties": {
                    "description": "Allows ScaleFT Broker agent inbound from local RACK_BASTION subnet",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "4421",
                    "sourceAddressPrefix": "[parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].bastion]",
                    "destinationAddressPrefix": "[parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].addressPrefix]",
                    "access": "Allow",
                    "priority": 115,
                    "direction": "Inbound"
                  }
                },
                {
                  "name": "Deny_ALL_INBOUND_UDP",
                  "properties": {
                    "description": "Deny all inbound UDP",
                    "protocol": "Udp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Deny",
                    "priority": 4000,
                    "direction": "Inbound"
                  }
                },
                {
                  "name": "Deny_ALL_INBOUND_TCP",
                  "properties": {
                    "description": "Deny all inbound TCP",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Deny",
                    "priority": 4001,
                    "direction": "Inbound"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "virtualNetwork": {
      "name": "[parameters('build').virtualNetwork[0].name]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-09-01",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('build').virtualNetwork[0].addressPrefix]"
          ]
        },
        "dhcpOptions": {
          "dnsServers": null
        }
      },
      "subnets": {
        "copy": [
          {
            "name": "subnetLoop",
            "count": "[length(parameters('build').virtualNetwork[0].subnets)]",
            "input": {
              "name": "[parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].name]",
              "properties": {
                "addressprefix": "[parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].addressPrefix]",
                "networkSecurityGroup": {
                  "id": "[concat(variables('environment').subscriptionId,parameters('build').virtualNetwork[0].ResourceGroup,'Microsoft.Network/networkSecurityGroups/',parameters('build').virtualNetwork[0].subnets[copyIndex('subnetLoop')].nsg)]"
                }
              }
            }
          }
        ]
      }
    }
  },
  "resources": [],
  "outputs": {
    "environment": {
      "type": "object",
      "value": "[variables('environment')]"
    },
    "networkSecurityGroup": {
      "type": "object",
      "value": "[variables('networkSecurityGroup')]"
    },
    "virtualNetwork": {
      "type": "object",
      "value": "[variables('virtualNetwork')]"
    }
  }
}